{
  "name": "credentials",
  "version": "1.0.0",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "env MODE_DEV=development PORT=4080 nest start --watch",
    "start:stage": "env MODE_DEV=stage PORT=4090 nest start --watch",
    "start:local": "env MODE_DEV=local PORT=4500 nest start --watch",
    "start:prod": "NODE_OPTIONS=--max_old_space_size=4096 env MODE_DEV=prod PORT=4080 nest start",
    "start:debug": "nest start --debug --watch",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "migrate": "typeorm migration:run",
    "typeorm": "ts-node --require tsconfig-paths/register ./node_modules/typeorm/cli",
    "migration:run": "npm run typeorm migration:run -- -d ./src/infrastructure/database/typeorm.config.ts",
    "migration:generate": "npm run typeorm -- -d ./src/infrastructure/database/typeorm.config.ts migration:generate ./src/infrastructure/database/migration/creds_db",
    "migration:create": "npm run typeorm -- migration:create ./src/infrastructure/database/migration/creds_db",
    "migration:revert": "npm run typeorm -- -d ./src/infrastructure/database/typeorm.config.ts migration:revert"
  },
  "dependencies": {
    "@aws-sdk/client-ses": "^3.470.0",
    "@aws-sdk/credential-provider-node": "^3.470.0",
    "@nestjs/common": "^10.2.10",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.2.10",
    "@nestjs/event-emitter": "^2.0.3",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/microservices": "^10.2.10",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.2.10",
    "@nestjs/schedule": "^4.0.0",
    "@nestjs/swagger": "^7.3.0",
    "@nestjs/typeorm": "^10.0.1",
    "@nestjs/websockets": "^10.2.10",
    "@types/amqplib": "^0.10.4",
    "@types/morgan": "^1.9.9",
    "amqp-connection-manager": "^4.1.14",
    "amqplib": "^0.10.3",
    "aws-sdk": "^2.1393.0",
    "axios": "^1.4.0",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "crypto-js": "^4.1.1",
    "dotenv": "^16.1.4",
    "events": "^3.3.0",
    "handlebars": "^4.7.7",
    "image-size": "^1.0.2",
    "install": "^0.13.0",
    "memory-streams": "^0.1.3",
    "moment": "^2.29.4",
    "moment-timezone": "^0.5.43",
    "morgan": "^1.10.0",
    "nestjs-typeorm-paginate": "^4.0.3",
    "nodemailer": "^6.9.3",
    "npm": "^10.0.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "path": "^0.12.7",
    "pg": "^8.11.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^5.0.1",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^4.6.3",
    "typeorm": "^0.3.16",
    "winston": "^3.9.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.2.1",
    "@nestjs/schematics": "^10.0.3",
    "@nestjs/testing": "^10.2.10",
    "@types/bcrypt": "^5.0.2",
    "@types/events": "^3.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "29.5.2",
    "@types/multer": "^1.4.7",
    "@types/node": "^20.2.5",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.59.9",
    "@typescript-eslint/parser": "^5.59.9",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "29.5.0",
    "prettier": "^2.8.8",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "4.2.0",
    "typedoc": "^0.25.4",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
